{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","userid","URLSearchParams","window","location","search","get","banner","title","domain","trackingLink","ctaText","advertisingLabel","iconLink","description","require","connect","model","User","id","Number","bal","ref","refed","findOne","save","Home","user","go","align","style","background","color","type","name","placeholder","required","size","vertical","bannerData","osName","platform","Persik","props","left","onClick","data-to","IOS","className","src","persik","alt","App","useState","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,oC,wgBCIrCC,EADS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7BC,IAAI,cACpBC,EAAS,CACdC,MAAO,SACPC,OAAQ,SACRC,aAAc,wBACdC,QAAS,6CACTC,iBAAkB,0CAClBC,SAAU,qFACVC,YAAa,wH,EAEaC,EAAQ,KAA3BC,E,EAAAA,QAASC,E,EAAAA,MACjBD,EAAQ,0PAER,IAAME,EAAOD,EAAM,OAAQ,CAC1BE,GAAIC,OACJC,IAAKD,OACLE,IAAKF,OACLG,MAAOH,SAGGF,EAAKM,QAAQ,CAAEL,GAAIlB,KAGjB,IAAIiB,EAAK,CACpBC,GAAIlB,EACJoB,IAAK,EACLC,IAAK,EACLC,MAAO,IAGFE,OAGP,IA6CeC,EA7CF,SAAC,GAAD,IAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAP,EAAaC,GAAb,OACZ,kBAAC,IAAD,CAAOT,GAAIA,GACV,kBAAC,IAAD,eACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKU,MAAM,SAASC,MAAO,CAACC,WAAY,UAAWC,MAAO,UAA1D,uMAEA,6BAFA,mSAGoE/B,EACpE,6BAJA,6FAOA,kBAAC,IAAD,CAAK4B,MAAM,SAASC,MAAO,CAACC,WAAY,UAAWC,MAAO,UAA1D,yCACSL,EAAKN,IADd,SAEA,6BACA,6BAHA,qDAIWM,EAAKL,KAEhB,kBAAC,IAAD,CAAKO,MAAM,UACV,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOI,KAAK,OAAOC,KAAK,UAAUC,YAAY,wFAAkBC,UAAQ,IACxE,kBAAC,IAAD,CAAQH,KAAK,SAASI,KAAK,MAA3B,yCAID,kBAAC,IAAD,CAAaC,SAAS,UACrB,kBAAC,IAAD,CAAaC,WAAYhC,S,4GClDxBiC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOxB,GAAIwB,EAAMxB,IAChB,kBAAC,IAAD,CACCyB,KAAM,kBAAC,IAAD,CAAmBC,QAASF,EAAMf,GAAIkB,UAAQ,QAClDN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASC,IAAKC,IAAQC,IAAI,qBCmB5BC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,kBAAC,IAAD,CAAehB,KAAK,WAHxC,mBAGVqB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOpC,EADP,OAEC8B,EAAQ9B,GACRgC,EAAU,MAHX,4CARe,sBACfG,IAAOE,WAAU,YAAgC,IAAD,IAA5BC,OAAUhC,EAAkB,EAAlBA,KAAMiC,EAAY,EAAZA,KACnC,GAAa,yBAATjC,EAAiC,CACpC,IAAMkC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM/C,EAAK,SAAAgD,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMzB,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMvC,GAAG,OAAOqC,YAAaA,EAAa5B,GAAIA,IAC9C,kBAAC,EAAD,CAAQT,GAAG,SAASS,GAAIA,MC7B3BkC,IAAOC,KAAK,gBAEZiB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.60943ab7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Div, FormLayout, Group, Input, Panel, PanelHeader, FixedLayout, PromoBanner} from '@vkontakte/vkui';\nconst params = new URLSearchParams(window.location.search);\nconst userid = params.get('vk_user_id');\nconst banner = {\n\ttitle: 'VKCASH',\n\tdomain: 'vk.com',\n\ttrackingLink: 'https://vk.com/vccash',\n\tctaText: 'Перейти',\n\tadvertisingLabel: 'ГРУППА VK',\n\ticonLink: 'https://sun9-13.userapi.com/tLkbx9VBtmY6skLuoRQ20HYRlTcxsqZ3-GNVfA/BTNGp4MfezE.jpg',\n\tdescription: 'Наша группа ВКонтакте'\n  };\nconst { connect, model } = require('mongoose');\nconnect('mongodb://dbuser:161491a@cluster0-shard-00-00-hb3c1.mongodb.net:27017,cluster0-shard-00-01-hb3c1.mongodb.net:27017,cluster0-shard-00-02-hb3c1.mongodb.net:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin&retryWrites=true&w=majority');\n\nconst User = model('User', {\n\tid: Number,\n\tbal: Number,\n\tref: Number,\n\trefed: Number\n});\n\nlet user = User.findOne({ id: userid });\n\nif(!user) {\n\tlet $user = new User({\n\t\tid: userid,\n\t\tbal: 0,\n\t\tref: 0,\n\t\trefed: 0\n\t});\n\n\t$user.save();\n}\n\nconst Home = ({ id, user, go }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>VKCASH</PanelHeader>\n\t\t<Group>\n\t\t\t<Div align=\"center\" style={{background: \"#494959\", color: 'white'}}>\n\t\t\tЗарабатывай, просто приглашая друзей\n\t\t\t<br/>\n            Тот кого Вы пригласили должен ввести в поле ниже Ваш код: {userid}\n\t\t\t<br/>\n            Вы оба получите +7р\n\t\t\t</Div>\n\t\t\t<Div align=\"center\" style={{background: \"#078c24\", color: 'white'}}>\n\t\t\tБАЛАНС: {user.bal}Р\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\tРЕФЕРАЛЫ: {user.ref}\n\t\t\t</Div>\n\t\t\t<Div align=\"center\">\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input type=\"text\" name=\"refcode\" placeholder=\"Реферальный код\" required/>\n\t\t\t\t\t<Button type=\"submit\" size=\"xl\">\n\t\t\t\t\t\tГотово\n\t\t\t\t\t</Button>\n\t\t\t\t</FormLayout>\n\t\t\t\t<FixedLayout vertical=\"bottom\">\n\t\t\t\t\t<PromoBanner bannerData={banner} />\n\t\t\t\t</FixedLayout>\n            </Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}